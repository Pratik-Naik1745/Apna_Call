{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hriti\\\\OneDrive\\\\Desktop\\\\Zoom Clone\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport httpStatus from \"http-status\";\nimport { createContext, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nconst client = axios.create({\n  baseURL: 'http://localhost:8000/api/v1/users'\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const authContext = useContext(AuthContext);\n  const [userData, setUserData] = useState(authContext);\n  const handleRegister = async (name, username, password) => {\n    try {\n      let request = await client.post(\"/register\", {\n        name: name,\n        username: username,\n        password: password\n      });\n      if (request.status === httpStatus.CREATED) {\n        return request.data.message;\n      }\n    } catch (err) {\n      throw err;\n    }\n  };\n  const handlelogin = async (username, password) => {\n    try {\n      let request = await client.post(\"/login\", {\n        username: username,\n        password: password\n      });\n      if (request.status === httpStatus.OK) {\n        localStorage.setItem(\"token\", request.data.token);\n        router(\"/home\");\n      }\n    } catch (e) {\n      throw e;\n    }\n  };\n  const getHistoryOfUser = async () => {\n    try {\n      let request = await client.get(\"/get_all_activity\", {\n        params: {\n          token: localStorage.getItem(\"token\")\n        }\n      });\n      return request.data;\n    } catch (err) {\n      throw err;\n    }\n  };\n  const addToUserHistory = async meetingCode => {\n    try {\n      let request = await client.post(\"/add_to_activity\", {\n        token: localStorage.getItem(\"token\"),\n        meeting_code: meetingCode\n      });\n      return request;\n    } catch (e) {\n      throw e;\n    }\n  };\n  const router = useNavigate();\n  const data = {\n    userData,\n    setUserData,\n    handleRegister,\n    handlelogin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"+eaXwDahIUTw634xfqa/Z2l2tFQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["axios","httpStatus","createContext","useContext","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","client","create","baseURL","AuthProvider","children","_s","authContext","userData","setUserData","handleRegister","name","username","password","request","post","status","CREATED","data","message","err","handlelogin","OK","localStorage","setItem","token","router","e","getHistoryOfUser","get","params","getItem","addToUserHistory","meetingCode","meeting_code","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hriti/OneDrive/Desktop/Zoom Clone/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport httpStatus from \"http-status\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport const AuthContext = createContext({});\r\n\r\n\r\n\r\nconst client = axios.create({\r\n    baseURL: 'http://localhost:8000/api/v1/users'\r\n})  \r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n\r\n    const [userData, setUserData] = useState(authContext);\r\n\r\n\r\n\r\n\r\n    const handleRegister = async (name, username, password) => {\r\n        try {\r\n            let request=await client.post(\"/register\",{\r\n                name:name,\r\n                username:username,\r\n                password:password\r\n            })\r\n            if(request.status===httpStatus.CREATED){\r\n                return request.data.message;\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    \r\n    const handlelogin=async (username,password)=>{\r\n        try{\r\n           let request=await client.post(\"/login\",{\r\n            username:username,\r\n            password:password\r\n           });\r\n           if(request.status===httpStatus.OK){\r\n             localStorage.setItem(\"token\",request.data.token);\r\n             router(\"/home\")\r\n\r\n           }\r\n\r\n        }\r\n        catch(e){\r\n            throw e;\r\n            \r\n        }\r\n    }\r\n    const getHistoryOfUser = async () => {\r\n        try {\r\n            let request = await client.get(\"/get_all_activity\", {\r\n                params: {\r\n                    token: localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            return request.data\r\n        } catch\r\n         (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    const addToUserHistory = async (meetingCode) => {\r\n        try {\r\n            let request = await client.post(\"/add_to_activity\", {\r\n                token: localStorage.getItem(\"token\"),\r\n                meeting_code: meetingCode\r\n            });\r\n            return request\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n    \r\n\r\n   \r\nconst router = useNavigate();\r\n\r\n    const data = {\r\n        userData, setUserData, handleRegister,handlelogin\r\n    }\r\n  \r\n     return(\r\n       \r\n         <AuthContext.Provider value={data}>\r\n            {children}\r\n         </AuthContext.Provider>\r\n     )\r\n     \r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK/C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC,CAAC,CAAC;AAI5C,MAAMO,MAAM,GAAGT,KAAK,CAACU,MAAM,CAAC;EACxBC,OAAO,EAAE;AACb,CAAC,CAAC;AAGF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAMC,WAAW,GAAGZ,UAAU,CAACK,WAAW,CAAC;EAG3C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACW,WAAW,CAAC;EAKrD,MAAMG,cAAc,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IACvD,IAAI;MACA,IAAIC,OAAO,GAAC,MAAMb,MAAM,CAACc,IAAI,CAAC,WAAW,EAAC;QACtCJ,IAAI,EAACA,IAAI;QACTC,QAAQ,EAACA,QAAQ;QACjBC,QAAQ,EAACA;MACb,CAAC,CAAC;MACF,IAAGC,OAAO,CAACE,MAAM,KAAGvB,UAAU,CAACwB,OAAO,EAAC;QACnC,OAAOH,OAAO,CAACI,IAAI,CAACC,OAAO;MAE/B;IAEJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,MAAMA,GAAG;IACb;EACJ,CAAC;EAED,MAAMC,WAAW,GAAC,MAAAA,CAAOT,QAAQ,EAACC,QAAQ,KAAG;IACzC,IAAG;MACA,IAAIC,OAAO,GAAC,MAAMb,MAAM,CAACc,IAAI,CAAC,QAAQ,EAAC;QACtCH,QAAQ,EAACA,QAAQ;QACjBC,QAAQ,EAACA;MACV,CAAC,CAAC;MACF,IAAGC,OAAO,CAACE,MAAM,KAAGvB,UAAU,CAAC6B,EAAE,EAAC;QAChCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACV,OAAO,CAACI,IAAI,CAACO,KAAK,CAAC;QAChDC,MAAM,CAAC,OAAO,CAAC;MAEjB;IAEH,CAAC,CACD,OAAMC,CAAC,EAAC;MACJ,MAAMA,CAAC;IAEX;EACJ,CAAC;EACD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,IAAId,OAAO,GAAG,MAAMb,MAAM,CAAC4B,GAAG,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE;UACJL,KAAK,EAAEF,YAAY,CAACQ,OAAO,CAAC,OAAO;QACvC;MACJ,CAAC,CAAC;MACF,OAAOjB,OAAO,CAACI,IAAI;IACvB,CAAC,CAAC,OACAE,GAAG,EAAE;MACH,MAAMA,GAAG;IACb;EACJ,CAAC;EAED,MAAMY,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC5C,IAAI;MACA,IAAInB,OAAO,GAAG,MAAMb,MAAM,CAACc,IAAI,CAAC,kBAAkB,EAAE;QAChDU,KAAK,EAAEF,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;QACpCG,YAAY,EAAED;MAClB,CAAC,CAAC;MACF,OAAOnB,OAAO;IAClB,CAAC,CAAC,OAAOa,CAAC,EAAE;MACR,MAAMA,CAAC;IACX;EACJ,CAAC;EAIL,MAAMD,MAAM,GAAG7B,WAAW,CAAC,CAAC;EAExB,MAAMqB,IAAI,GAAG;IACTV,QAAQ;IAAEC,WAAW;IAAEC,cAAc;IAACW;EAC1C,CAAC;EAEA,oBAEItB,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAElB,IAAK;IAAAb,QAAA,EAC9BA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAIhC,CAAC;AAAAlC,EAAA,CAvFYF,YAAY;EAAA,QAyEVP,WAAW;AAAA;AAAA4C,EAAA,GAzEbrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}